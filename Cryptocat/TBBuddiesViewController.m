//
//  TBBuddiesViewController.m
//  Cryptocat
//
//  Created by Thomas Balthazar on 17/10/13.
//  Copyright (c) 2013 Thomas Balthazar. All rights reserved.
//

#import "TBBuddiesViewController.h"
#import "TBBuddy.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@interface TBBuddiesViewController ()

@property (nonatomic, strong) NSArray *internalBuddies;

- (IBAction)done:(id)sender;

@end

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@implementation TBBuddiesViewController

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Lifecycle

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)didReceiveMemoryWarning {
  [super didReceiveMemoryWarning];
  // Dispose of any resources that can be recreated.
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)viewDidLoad {
  [super viewDidLoad];
  self.internalBuddies = [self.buddies allObjects];
}

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Table view data source

////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
  return 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
  return [self.internalBuddies count] + 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (UITableViewCell *)tableView:(UITableView *)tableView
         cellForRowAtIndexPath:(NSIndexPath *)indexPath {
  static NSString *CellIdentifier = @"BuddyCellID";
  UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier
                                                          forIndexPath:indexPath];
  
  if (indexPath.row==0) {
    cell.textLabel.text = NSLocalizedString(@"Conversation", @"Conversation Room Label");
  }
  else {
    TBBuddy *buddy = [self.internalBuddies objectAtIndex:indexPath.row-1];
    cell.textLabel.text = buddy.nickname;
  }
  
  return cell;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark UITableViewDelegate

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
  // conversation room
  if (indexPath.row==0) {
    if ([self.delegate respondsToSelector:@selector(buddiesViewController:didSelectRoomName:)]) {
      [self.delegate buddiesViewController:self didSelectRoomName:self.roomName];
    }
  }
  
  // buddy
  else {
    if ([self.delegate respondsToSelector:@selector(buddiesViewController:didSelectBuddy:)]) {
      TBBuddy *buddy = [self.internalBuddies objectAtIndex:indexPath.row-1];
      [self.delegate buddiesViewController:self didSelectBuddy:buddy];
    }
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Actions

////////////////////////////////////////////////////////////////////////////////////////////////////
- (IBAction)done:(id)sender {
  if ([self.delegate respondsToSelector:@selector(buddiesViewControllerHasFinished:)]) {
    [self.delegate buddiesViewControllerHasFinished:self];
  }
}

@end
