//
//  TBMessageCell.m
//  ChatView
//
//  Created by Thomas Balthazar on 07/11/13.
//  Copyright (c) 2013 Thomas Balthazar. All rights reserved.
//

#import "TBMessageCell.h"
#import "TBMessageCellView.h"

#define kPaddingTop     0.0
#define kPaddingBottom  10.0
#define kPaddingLeft    11.0
#define kPaddingRight   12.5

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@interface TBMessageCell () <TBMessageCellViewDelegate>

@property (nonatomic, strong) TBMessageCellView *messageView;

@end

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@implementation TBMessageCell

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Lifecycle

////////////////////////////////////////////////////////////////////////////////////////////////////
- (id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier {
  if (self=[super initWithStyle:style reuseIdentifier:reuseIdentifier]) {
    _messageView = [[TBMessageCellView alloc] init];
    _messageView.delegate = self;
    [self.contentView addSubview:_messageView];
  }
  return self;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)layoutSubviews {
  [super layoutSubviews];
  
  CGRect messageViewFrame = self.contentView.frame;
  messageViewFrame.origin.x+=kPaddingLeft;
  messageViewFrame.origin.y+=kPaddingTop;
  messageViewFrame.size.width-=(kPaddingLeft+kPaddingRight);
  messageViewFrame.size.height-=(kPaddingTop+kPaddingBottom);
  self.messageView.frame = messageViewFrame;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Public Methods

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setSenderName:(NSString *)senderName {
  self.messageView.senderName = senderName;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSString *)senderName {
  return self.messageView.senderName;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setMessage:(NSString *)message {
  self.messageView.message = message;
  [self setNeedsLayout];
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSString *)message {
  return self.messageView.message;
}

// TODO: implement the waringMessage setter/getter for real

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setWarningMessage:(NSString *)warningMessage {
  self.messageView.message = [NSString stringWithFormat:@"%@ / %@",
                              warningMessage, self.messageView.message];
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSString *)warningMessage {
  return @"WARNING!";
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setMeSpeaking:(BOOL)meSpeaking {
  self.messageView.meSpeaking = meSpeaking;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (BOOL)isMeSpeaking {
  return self.messageView.isMeSpeaking;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setIsErrorMessage:(BOOL)isErrorMessage {
  self.messageView.isErrorMessage = isErrorMessage;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (BOOL)isErrorMessage {
  return self.messageView.isErrorMessage;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
+ (CGFloat)heightForCellWithSenderName:(NSString *)senderName text:(NSString *)text {
  // add the sender name and some spaces for the sender label padding
  NSString *paddingString = @"     :     ";
  NSString *fullText = [senderName stringByAppendingFormat:@"%@%@", paddingString, text];

  return [TBMessageCellView sizeForText:fullText].height + kPaddingTop + kPaddingBottom;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setBackgroundColor:(UIColor *)backgroundColor {
  [super setBackgroundColor:backgroundColor];
  self.messageView.backgroundColor = backgroundColor;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark TBMessageCellViewDelegate

////////////////////////////////////////////////////////////////////////////////////////////////////
- (BOOL)messageCellView:(TBMessageCellView *)cellView
  shouldInteractWithURL:(NSURL *)URL
                inRange:(NSRange)characterRange {
  if ([self.delegate respondsToSelector:@selector(messageCell:shouldInteractWithURL:inRange:)]) {
    return [self.delegate messageCell:self shouldInteractWithURL:URL inRange:characterRange];
  }
  return NO;
}


@end
