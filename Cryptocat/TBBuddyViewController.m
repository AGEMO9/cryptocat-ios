//
//  TBBuddyViewController.m
//  Cryptocat
//
//  Created by Thomas Balthazar on 28/10/13.
//  Copyright (c) 2013 Thomas Balthazar. All rights reserved.
//

#import "TBBuddyViewController.h"
#import "TBBuddy.h"
#import "TBFingerprintCell.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@interface TBBuddyViewController ()

@property (weak, nonatomic) IBOutlet TBFingerprintCell *groupFingerprintCell;
@property (weak, nonatomic) IBOutlet TBFingerprintCell *privateFingerprintCell;

@end

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@implementation TBBuddyViewController

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Lifecycle

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)didReceiveMemoryWarning {
  [super didReceiveMemoryWarning];
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)dealloc {
  [self.buddy removeObserver:self forKeyPath:@"groupChatFingerprint"];
  [self.buddy removeObserver:self forKeyPath:@"chatFingerprint"];
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)viewDidLoad {
  [super viewDidLoad];

  self.title = self.buddy.nickname;
  self.groupFingerprintCell.fingerprint = self.buddy.groupChatFingerprint;
  self.privateFingerprintCell.fingerprint = self.buddy.chatFingerprint;
  
  [self.buddy addObserver:self forKeyPath:@"groupChatFingerprint" options:0 context:NULL];
  [self.buddy addObserver:self forKeyPath:@"chatFingerprint" options:0 context:NULL];
}

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Observers

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)observeValueForKeyPath:(NSString *)keyPath
                      ofObject:(id)object
                        change:(NSDictionary *)change
                       context:(void *)context {
  if (object==self.buddy) {
    self.groupFingerprintCell.fingerprint = self.buddy.groupChatFingerprint;
    self.privateFingerprintCell.fingerprint = self.buddy.chatFingerprint;
    [self.tableView reloadData];
  }
}

@end
